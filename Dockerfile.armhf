FROM lsiobase/nginx:arm32v7-3.11

# set version label
ARG BUILD_DATE
ENV VERSION=0.1
ENV CERTBOT_VERSION=0.33.1
LABEL build_version="Sidey79 version:- ${VERSION} Build-date:- ${BUILD_DATE}"
LABEL maintainer="sidey79"
# environment settings
ENV DHLEVEL=2048 ONLY_SUBDOMAINS=false 
ENV S6_BEHAVIOUR_IF_STAGE2_FAILS=2

RUN \
 echo "**** install build packages ****" && \
 apk add --no-cache --virtual=build-dependencies \
	g++ \
	gcc \
	libffi-dev \
	openssl-dev \
	python3-dev && \
 echo "**** install runtime packages ****" && \
 apk add --no-cache --upgrade \
	curl \
	fail2ban \
	gnupg \
	nginx \
	nginx-mod-http-headers-more \
	nginx-mod-http-lua \
	nginx-mod-http-lua-upstream \
	nginx-mod-http-set-misc \
	nginx-mod-http-xslt-filter \
	py3-cryptography \
	py3-future \
	py3-pip && \
 echo "**** install certbot plugins ****" && \
 if [ -z ${CERTBOT_VERSION+x} ]; then \
        CERTBOT="certbot"; \
 else \
        CERTBOT="certbot==${CERTBOT_VERSION}"; \
 fi && \
 pip3 install -U \
	pip && \
 pip3 install -U \
	${CERTBOT} \
	cryptography \
	requests && \
 echo "**** cleanup ****" && \
 apk del --purge \
	build-dependencies && \
 for cleanfiles in *.pyc *.pyo; \
	do \
	find /usr/lib/python3.*  -iname "${cleanfiles}" -exec rm -f '{}' + \
	; done && \
 rm -rf \
	/tmp/* \
	/root/.cache

# add local files
COPY root/ /

# ports and volumes
EXPOSE 80 443
VOLUME /config
